"file allocation table (kurz fat [f\u00e6t], englisch f\u00fcr dateizuordnungstabelle) bezeichnet eine urspr\u00fcnglich 1977 von microsoft entwickelte, weit verbreitete familie von dateisystemen, die zum industriestandard erhoben wurde und bis heute auch \u00fcber betriebssystemgrenzen hinweg als fast universelles austauschformat dient. wesentliche erweiterungen wurden auch von seattle computer products, compaq, digital research und novell eingebracht. als propriet\u00e4re nachfolger entwickelte microsoft ntfs und exfat.\n\n\n== hintergrund ==\ndas fat-dateisystem wurde urspr\u00fcnglich 1977 in einer 8-bit-variante von marc mcdonald f\u00fcr microsofts standalone disk basic-80 f\u00fcr 8080-prozessoren entwickelt, 1978 auf einer dec pdp-10 unter zuhilfenahme eines 8086-simulators f\u00fcr standalone disk basic-86 portiert und 1979 f\u00fcr microsofts betriebssystem mdos/midas adaptiert.\nebenfalls 1979 wurde standalone disk basic-86 von bob o\u2019rear auf eine von seattle computer products (scp) entwickelte s-100-bus-hardware-plattform angepasst. bei dieser gelegenheit wurde tim paterson auf das dateisystem aufmerksam, das er 1980 als konzeptionelle grundlage seines 12-bit-dateisystems f\u00fcr scps betriebssystem qdos w\u00e4hlte, welches, umbenannt in 86-dos, von microsoft zun\u00e4chst lizenziert, aufgekauft und daraufhin 1981 die ausgangsbasis f\u00fcr ms-dos und pc dos 1.0 wurde.\nzu der familie der fat-dateisysteme geh\u00f6ren:\n\nfat12 wird f\u00fcr jede dos-diskette verwendet (u. a. unter windows, aber auch z. b. macos), findet sich aber auch auf sd-karten geringer speicherkapazit\u00e4t. der atari st benutzt ein fast identisches dateisystem und kann fat12-disketten lesen und beschreiben.\nfat16 wird auf allen arten von mobilen datentr\u00e4gern (au\u00dfer disketten) mit einer gr\u00f6\u00dfe von bis zu 2, selten bis 4 gib verwendet. fat16 findet auch auf ger\u00e4ten mit sd-karten der version 1.0/1.1 mit bis zu 4 gb speicherkapazit\u00e4t verwendung, wie beispielsweise \u00e4ltere digitalkameras.\nfat32 wird z. b. in allen arten von mobilen speichern von mehr als 2 gib kapazit\u00e4t genutzt. unter windows 9x ab version 95b und einigen sp\u00e4teren dos-systemen diente es auf festplatten als ersatz f\u00fcr fat16 und wird auf vielen sdhc-karten mit speicherkapazit\u00e4ten bis zu 32 gb verwendet.\nfat+ (fat32+/fat16+) ist eine r\u00fcckw\u00e4rtskompatible erweiterung von fat32 (und \u2013 theoretisch \u2013 fat16b), welche die maximale gr\u00f6\u00dfe einer datei von 4 gib auf 256 gib erh\u00f6ht (wird derzeit unter anderem von enhanced dr-dos und deskwork unterst\u00fctzt)\nexfat ist ein speziell f\u00fcr flash-speicher entwickeltes dateisystem mit einer theoretischen maximalen dateigr\u00f6\u00dfe von 16 eib, das sich konzeptionell entfernt an fat anlehnt. es ist bei sdxc-speicherkarten das im standard vorgeschriebene dateisystem.\n\n\n== typen ==\n\n\n=== fat12 ===\nmit der 1980 erschienenen ersten version von qdos bzw. 86-dos wurde fat12 als dateisystem f\u00fcr 8,0\u2033- und 5,25\u2033-disketten eingef\u00fchrt. erst ab 86-dos 0.42 vom februar 1981 wiesen die internen ordnungsstrukturen ein format auf, das dem sp\u00e4teren fat12-format in ms-dos und pc dos in allen wesentlichen punkten glich. aufgrund abweichender logischer geometrien und der tatsache, dass der bios parameter block (bpb) erst mit dos 2 eingef\u00fchrt wurde, k\u00f6nnen jedoch (mit ausnahme von scp ms-dos 1.25) weder ms-dos noch pc dos auf unter 86-dos formatierte medien zugreifen.\nanfangs wurden keine unterverzeichnisse verwaltet. das \u00e4nderte sich mit ms-dos version 2.0.\nfat12 wird nur auf datentr\u00e4gern bzw. partitionen bis zu einer gr\u00f6\u00dfe von 16 mib eingesetzt; es ist bis heute auf allen fat-formatierten 3,5\u2033-disketten im einsatz.\nmerkmale:\n\n12-bit-clusternummern, mit denen 212 = 4096 cluster angesprochen werden k\u00f6nnen. die nummerierung der cluster beginnt auf disketten bei der nummer 2.\nes werden nur dateinamen im schema 8.3 (acht zeichen f\u00fcr den dateinamen und drei zeichen f\u00fcr die dateinamenserweiterung) unterst\u00fctzt.\ndie clustergr\u00f6\u00dfe betr\u00e4gt 512 byte bis 4096 byte.\ndas hauptverzeichnis (root-directory) der partition ist auf eine gr\u00f6\u00dfe von 14 clustern beschr\u00e4nkt, dadurch ergibt sich eine maximale anzahl von 224 eintr\u00e4gen (verzeichnisse und/oder dateien). normalerweise wird der erste eintrag durch die bezeichnung des datentr\u00e4gers belegt.\nunterst\u00fctzt werden die dateiattribute \u201eschreibgesch\u00fctzt\u201c, \u201eversteckt\u201c, \u201esystem\u201c und \u201earchiv\u201c.\nunterst\u00fctzung f\u00fcr passw\u00f6rter und zugangsberechtigungen f\u00fcr dateien oder ordner ist in microsoft-betriebssystemen nicht implementiert, ist jedoch optional unter allen betriebssystemen verf\u00fcgbar, die die entsprechenden fat-erweiterungen von digital research und novell unterst\u00fctzen.\n\n\n=== fat16 ===\nfat16 ist ein dateisystem, das 1983 zu fat12 dazukam. durch die zunehmende gr\u00f6\u00dfe der eingesetzten festplatten wurde eine erweiterung des adressraumes notwendig. nun waren selbst mit 512-byte-clustern zumindest theoretisch insgesamt 32 mib gro\u00dfe platten verwaltbar.\ndie urspr\u00fcngliche fat16-implementierung verwendete auf partitionierten medien in der regel (abh\u00e4ngig vom jeweiligen dos-oem) den partitiontyp 04h und einen noch vergleichsweise kurzen bios parameter block (bpb) im bootsektor. dessen genauer aufbau und inhalt hing insbesondere bei dos 2.x noch stark von der verwendeten dos-version ab, er enthielt jedoch in allen f\u00e4llen nur einen 16-bit breiten eintrag f\u00fcr die sektorenanzahl, was die gr\u00f6\u00dfe von fat16-laufwerken auf 32 mib bis 512 mib beschr\u00e4nkte (je nach betriebssystemversion). mit os/2 release 1 wurde ein enhanced bios parameter block (ebpb) eingef\u00fchrt, erkennbar am signaturbyte 28h (f\u00fcr dos-bpb-version 4.0) an offset +26h. mit einf\u00fchrung von dos 3.31 wurde dieser durch den nochmals erweiterten, heute allgemein f\u00fcr fat12 und fat16 verwendeten extended bios parameter block (xbpb) mit signatur 29h (f\u00fcr dos-bpb-version 4.1) an offset +26h ersetzt. ebpb und xbpb zeichnen sich u. a. dadurch aus, dass der eintrag f\u00fcr die zahl der sektoren auf 32-bit breite wuchs, womit erstmals fat16-laufwerke mit bis zu 2 gib, sp\u00e4ter 4 gib, m\u00f6glich wurden, auch wenn die damaligen betriebssysteme davon noch keinen gebrauch machen konnten. diese gr\u00f6\u00dfere variante von fat16 wurde in entwicklerkreisen \u201ebigdos\u201c genannt, daher stammt auch ihr offizieller name fat16b. da \u00e4ltere betriebssysteme mit diesem neuen typ nicht arbeiten konnten, wurde f\u00fcr die verwendung auf partitionierten medien auch ein neuer partitionstyp (06h) daf\u00fcr definiert. die alte fat16-variante wird zwar nach wie vor unterst\u00fctzt, findet aber (bis auf die forcierte erzeugung von sehr kleinen fat16-partitionen mit dem partitionstyp 04h) in der praxis keine verwendung mehr, da sp\u00e4testens seit dos 5 bei der erzeugung von fat12- und fat16-partitionen gleicherma\u00dfen nur noch bootsektoren mit xbpb geschrieben werden, um einige neue betriebssystemfunktionen optimal zu unterst\u00fctzen. die tatsache, dass es eigentlich zwei fat16-typen gibt, ist in der allgemeinheit nicht mehr pr\u00e4sent, mehr noch, da fat12 fast nur noch f\u00fcr disketten verwendet wird, wird heute fat oft f\u00e4lschlicherweise nur mit fat16 (und das auch nur in der beschriebenen fat16b-variante) gleichgesetzt, obwohl darunter eigentlich mehrere fat12- und fat16-typen zu verstehen w\u00e4ren. allerdings ben\u00f6tigt das server-betriebssystem novell-netware bis zur version 4.0 noch eine bis zu 16 mib gro\u00dfe \u201edos\u201c-bootpartition, die (automatisch) mit fat12 erzeugt wurde.\nerfolgt der zugriff \u00fcber logical block addressing (lba), wird eine fat16-partition auch als fat16x bezeichnet.\nfat16 hat folgende merkmale:\n\nrund 65.000 datei-eintr\u00e4ge sind maximal m\u00f6glich, davon \u00fcblicherweise 512 im stammverzeichnis (obwohl dies variabel ist, ist 512 de facto der einzige anzutreffende wert).\nmaximal 512 eintr\u00e4ge pro unterverzeichnis, bei verwendung von lfn entsprechend weniger.\nes k\u00f6nnen 216 \u2212 12 = 65.524 cluster angesprochen werden (12 cluster reserviert fat16, deshalb nicht 65.536).\n8.3-dateinamensformat; lfn m\u00f6glich.\ndie partitionsgr\u00f6\u00dfe ist unter ms-dos und windows 9x (die auf dos basieren) bei der neuanlage unter fdisk auf 2 gib begrenzt, bei der anlage mit fremdprogrammen k\u00f6nnen sie knapp unter 4 gib verwalten. windows nt, freedos und enhanced dr-dos k\u00f6nnen fat16-partitionen mit der maximalen gr\u00f6\u00dfe erzeugen und verwalten (clustergr\u00f6\u00dfe 64 kib).\ndie cluster sind je nach partitionsgr\u00f6\u00dfe zwischen 512 byte und maximal 32 kib (windows nt und enhanced dr-dos maximal 64 kib) gro\u00df.\ndateien d\u00fcrfen bis 2 gib gro\u00df werden, unter windows nt und enhanced dr-dos 4 gib.\ndas haupt-(root-)verzeichnis muss sich an einer bestimmten position auf dem datentr\u00e4ger befinden. seine gr\u00f6\u00dfe wird bei erstellung des dateisystems festgelegt, d. h., es kann nicht wachsen.eine weiterentwicklung erfolgte mit fat32.\n\n\n=== fat32 ===\nfat32 ist ein von microsoft entwickeltes dateisystem, das im sommer 1996 mit windows 95b eingef\u00fchrt wurde und die vorg\u00e4ngerversion fat16 erg\u00e4nzt.\npartitionen kleiner als 512 mib werden nach wie vor mit fat16 erzeugt, von 512 mib bis 2 gib hat man die wahl, ab 2 gib wird fat32 benutzt. die adressierung arbeitet mit 32 bits, wovon 4 bits reserviert sind, so dass 228 = 268.435.456 cluster adressiert werden k\u00f6nnen.\nfat32 kann au\u00dferdem mit allen windows-versionen seit windows 95b sowie \u2013 anders als ntfs \u2013 problemlos auch mit freedos und enhanced dr-dos verwendet werden. da windows je nach version von haus aus nur wenige dateisysteme unterst\u00fctzt, wird fat32 trotz seiner beschr\u00e4nkungen zum datenaustausch sowohl mit anderen windows-systemen als auch mit nicht-windows-systemen (z. b. macos, linux) eingesetzt, z. b. auf usb-speichersticks und mobilen festplatten.\nspielekonsolen wie beispielsweise die playstation 3 oder digitale satellitenreceiver setzen bei extern angeschlossenen festplatten h\u00e4ufig fat32 als dateisystem voraus.\nein nachteil eines standardkonformen fat32-dateisystems ist, dass nur dateien erstellt werden k\u00f6nnen, die kleiner als 4 gib sind. mit der r\u00fcckw\u00e4rtskompatiblen erweiterung fat32+ sind zwar auch dateien bis zu 256 gib m\u00f6glich, diese erweiterung wird aber nur von wenigen systemen unterst\u00fctzt.\nda bis zu einer partitionsgr\u00f6\u00dfe von 8 gib ein cluster nur 4 kib gro\u00df ist (bei der standardformatierung), werden diese \u201ekleinen und alten\u201c platten verh\u00e4ltnism\u00e4\u00dfig besser ausgenutzt als mit fat16, wo ein cluster bis zu 32 kib belegt (unter windows nt wie beispielsweise windows 2000 fat16-clustergr\u00f6\u00dfe maximal 64 kib).\nerfolgt der zugriff \u00fcber logical block addressing (lba), wird eine fat32-partition auch als fat32x bezeichnet.\nfat32 hat folgende merkmale:\n\nes werden bis zu 228 = 268.435.456 cluster verwendet.\ndie maximale dateisystemgr\u00f6\u00dfe h\u00e4ngt von der sektorengr\u00f6\u00dfe des verwendeten mediums ab. bei festplatten, die typischerweise 512 bytes sektorengr\u00f6\u00dfe haben, betr\u00e4gt die maximale gr\u00f6\u00dfe 2 tebibyte; bei datentr\u00e4gern, die 4 kib sektorengr\u00f6\u00dfe verwenden, betr\u00e4gt die maximale gr\u00f6\u00dfe 16 tebibyte. die gr\u00f6\u00dfe ist prim\u00e4r durch das vier bytes gro\u00dfe gesamtsektoranzahl-feld (offset 20h) im bootsektor begrenzt.\ndie cluster sind je nach partitionsgr\u00f6\u00dfe zwischen 512 byte und maximal 32 kib gro\u00df.\ndateien d\u00fcrfen max. bis zu 4 gib \u2212 1 byte (= 4.294.967.295 byte) gro\u00df werden. diese grenze ist eine folge des nur 4 byte breiten feldes f\u00fcr die dateigr\u00f6\u00dfe in der directory-tabelle.\nes k\u00f6nnen maximal 228 dateien abgelegt werden; da jede datei mindestens einen cluster belegt, beschr\u00e4nkt die maximale anzahl der cluster die maximale anzahl dateien.\ndas haupt-(root-)verzeichnis muss sich nicht an einer bestimmten position auf dem datentr\u00e4ger befinden und hat vor allem keine festgelegte gr\u00f6\u00dfe; bei den anderen fat-varianten wird die maximale anzahl der eintr\u00e4ge im hauptverzeichnis bei der formatierung festgelegt (und kann nachtr\u00e4glich nicht ge\u00e4ndert werden).praxis-limitierungen:\n\nalte dos-/windows-versionen (bis einschlie\u00dflich windows 95a, windows nt bis version 4.0, ms-dos bis 6.22, pc dos bis 2000, dr-dos bis 7.03) k\u00f6nnen nicht darauf zugreifen. f\u00fcr windows nt 4.0 kam, etwas versp\u00e4tet, ein vollwertiger kostenloser treiber. f\u00fcr beliebige dos-systeme ab 3.3 kann der von matthias paul f\u00fcr dr-dos entwickelte dynamisch ladbare drfat32-treiber verwendet werden, der fat32-laufwerke \u00fcber das redirector-interface als (erweiterte) cd-extension mit vollem schreib-/lesezugriff in das system einbindet.\nunter windows 2000 und nachfolgern darf der benutzer mit der eingebauten funktion \u201eformatieren\u201c maximal 32 gib gro\u00dfe fat32-dateisysteme neu erstellen, auch das kommandozeilen-programm format.com hat diese beschr\u00e4nkung. allerdings erlaubt die explizite wahl von fat32 als dateisystem durch die fs-option eine formatierung von datentr\u00e4gern selbst gr\u00f6\u00dfer als 32 gib (format /fs:fat32). der zugriff auf gr\u00f6\u00dfere fat32-dateisysteme, die mit alternativen werkzeugen erstellt wurden, ist aber immer m\u00f6glich. mit zus\u00e4tzlichen programmen kann man jedoch auch unter windows 2000 oder h\u00f6her partitionen gr\u00f6\u00dfer als 32 gib mit fat32 erstellen und formatieren.\nunter windows 10 ist das formatieren mit fat32 \u00fcber die eingabeaufforderung m\u00f6glich.\ndas festplatten-dienstprogramm von mac os x tiger 10.4 und neuer sowie das linux-programm mkdosfs (in verbindung mit fdisk) k\u00f6nnen auf festplatten, die gr\u00f6\u00dfer als 32 gib sind, eine oder mehrere fat32-partitionen mit mehr als 32 gib kapazit\u00e4t erzeugen.\nes gibt mehrere moderne dos-systeme, die fat32 nativ unterst\u00fctzen: ms-dos 7.10/8.00, enhanced dr-dos, freedos, oem pc dos 7.10 (der nachfolger von pc dos 2000) und datalight rom-dos.\ndas speichern von meta-informationen f\u00fcr dateien in extended attributes ist nicht mehr m\u00f6glich.\nmicrosofts spezifikation verbietet aus genannten gr\u00fcnden der geschwindigkeit und kompatibilit\u00e4t \u00fcber 2 mb lange dateiordner, welches einen ordner auf 65.534 8.3-dateinameneintr\u00e4ge (jeweils 32 bytes) beschr\u00e4nkt (zwei eintr\u00e4ge sind bereits durch . und .. reserviert). die verwendung von langen dateinamen (lfn, das beinhaltet dateinamen in kleinbuchstaben) reduziert die anzahl.da auch in aktuellen windows-installationen fat32 und ntfs koexistieren k\u00f6nnen, ist zu beachten, dass bei der \u00fcbertragung von dateien von ntfs auf fat32 sowohl ntfs-streams als auch die berechtigungen verloren gehen, was je nach anwendungszweck sinnvoll oder st\u00f6rend sein kann.\n\n\n== erweiterungen ==\n\n\n=== vfat und lfn ===\nvfat (virtual file allocation table) ist eine erweiterung des fat-formats zur verwendung langer dateinamen, die auf fat12, fat16 und (seit dessen einf\u00fchrung im jahr 1996) auch auf fat32 angewendet werden kann. gelegentlich wird im sprachgebrauch auch f\u00e4lschlich vfat mit fat32 gleichgesetzt.\nlfn steht f\u00fcr long filenames, lange dateinamen, die durch vfat in allen klassischen fat-dateisystemen implementiert sind.\n\ndie designer von windows 95 hatten das ziel, die nutzung von langen dateinamen zu erm\u00f6glichen, obwohl die auf ms-dos aufbauenden versionen das unter der nt-serie daf\u00fcr vorgesehene nachfolge-dateisystem ntfs nicht unterst\u00fctzen. das wird durch einen trick im layout des dateisystems erreicht. die datei wird wie bisher als 8.3-dateiname gespeichert, bei l\u00e4ngeren namen wird jedoch ein alias in der form xxxxxx~1.xxx verwendet, wobei die nummer hochgez\u00e4hlt wird. der lange name wird dann \u00fcber mehrere verzeichniseintr\u00e4ge verteilt, die eine kombination von datei-attributen aufweisen, die \u00e4ltere systeme als ung\u00fcltig ansehen und daher ignorieren.\nallerdings kann es durch die verwendung des \u201evolume\u201c-attributes dazu kommen, dass \u00e4ltere ms-dos (vor 7.1) im dir-befehl solche eintr\u00e4ge irrt\u00fcmlich als volumenamen interpretieren, vor allem, wenn der tats\u00e4chliche volumename im verzeichnis nicht an erster stelle steht oder ganz fehlt.\ndas endg\u00fcltige format erlaubt bis zu 255 zeichen lange dateinamen (wobei der name inklusive speicherpfad bis zu 260 zeichen enthalten kann) und nutzt unicode als zeichensatz mit der kodierung ucs-2.\nin bisher von microsoft-systemen nicht genutzten bereichen des eintrages mit dem 8.3-dateinamen werden nun auch das erstelldatum und das datum des letzten zugriffes gespeichert.\n\n\n==== unterst\u00fctzung in betriebssystemen ====\nwindows for workgroups 3.11 unterst\u00fctzt vfat optional, jedoch nur f\u00fcr festplatten und ohne die m\u00f6glichkeit langer dateinamen.\nvfat wird in windows 95 und h\u00f6her und in windows nt 3.5 und h\u00f6her unterst\u00fctzt.\nunter linux wird die vfat-erweiterung vollst\u00e4ndig unterst\u00fctzt.\n\n\n=== umsdos ===\nin den fr\u00fchen 1990er jahren wurde von vielen linux-distributionen die umsdos-erweiterung f\u00fcr fat16 eingesetzt, um linux zu installieren, ohne das festplattenlaufwerk neu partitionieren und formatieren zu m\u00fcssen. umsdos f\u00fcgt zu einem fat-dateisystem eine dar\u00fcberliegende unix-kompatible schicht hinzu. diese verwaltet dateien, die den namen --linux-.--- tragen. darin werden benutzerrechte und auch lange dateinamen gespeichert.\nin linux 2.6.11 wurde umsdos aus dem kernel entfernt, da es nicht mehr weiterentwickelt wird. es gibt als ersatz ein posix-overlay-dateisystem, das fuse verwendet und \u00fcber einem normalen fat-dateisystem \u201eeingeblendet\u201c werden kann.\n\n\n=== uvfat ===\nuvfat existierte nur f\u00fcr eine kurze zeit und hat die vfat-erweiterung zur speicherung langer dateinamen genutzt, w\u00e4hrend der umsdos-mechanismus f\u00fcr die unter allen fat-versionen fehlenden benutzerrechte verwendet wurde. so waren unter linux angelegte lange dateinamen auch unter modernen windows-versionen lesbar und umgekehrt. die entwicklung wurde bereits vor derjenigen der umsdos-erweiterung wieder eingestellt.\n\n\n== derivate ==\nes gibt folgende derivate:\n\n\n=== exfat ===\nexfat (extended file allocation table) ist ein speziell f\u00fcr flash-speicher entwickeltes dateisystem. eingef\u00fchrt wurde es 2006 mit windows ce 6.0. exfat soll dort eingesetzt werden, wo ntfs nur schwer oder gar nicht implementierbar ist und zugleich die beschr\u00e4nkungen von fat32 \u2013 insbesondere maximale dateigr\u00f6\u00dfe von 4 gib \u2013 vermieden werden sollen. \nwindows vista ab service pack 1, windows 7 und neuere windows-versionen unterst\u00fctzen exfat nativ, f\u00fcr windows xp ab sp2 hat microsoft ein aktualisierungspaket. auf apple-computern wird exfat ab mac os x snow leopard, version 10.6.5, vollst\u00e4ndig unterst\u00fctzt. am 27. august 2019 ver\u00f6ffentlichte microsoft die spezifikationen f\u00fcr exfat und erkl\u00e4rte, eine implementation von exfat im linux-kernel zu unterst\u00fctzen und die patente daran \u00fcber das open invention network freizugeben. in der folge wird exfat vom linux-kernel ab version 5.4 direkt unterst\u00fctzt, in kernel 5.7 wurde der treiber durch einen besseren ersetzt. zuvor gab es bereits einen propriet\u00e4ren linux-treiber des unternehmens tuxera sowie einen von der firma samsung unter der gplv3 lizenzierten treiber f\u00fcr fuse.im rahmen der spezifikationen f\u00fcr die memory-stick-xc- und sdxc-flashspeicher-kartentypen wird die verwendung von exfat vorgeschrieben; die speicherkarten k\u00f6nnen zwar prinzipiell auch mit einem anderen dateisystem formatiert werden, sind dann aber nicht standardkonform und daher nicht in jedem ger\u00e4t (wie z. b. digitalkamera) verwendbar.\ndie vorteile gegen\u00fcber vorherigen versionen sind:\n\ntheoretische maximale dateigr\u00f6\u00dfe von 64 zib, empfohlene maximale dateigr\u00f6\u00dfe 512 tb (maximale partitionsgr\u00f6\u00dfe).\nein cluster darf maximal 32 mib gro\u00df sein (theoretisch jedoch bis zu 2255 bytes).\nes wurde eine separate tabelle (\u201ebit-karte\u201c) eingef\u00fchrt, welche die freien cluster effizienter indiziert. ein bit wird jeweils einem cluster zugeordnet. dies wurde bei fat32, fat16 und fat12 von der viel gr\u00f6\u00dferen fragmenttabelle (oder \u201efragmentkarte\u201c) \u00fcbernommen, mit jeweils 32, 16, und 12 bits pro cluster; daher die namen. bei exfat werden nur cluster fragmentierter dateien in der fragmenttabelle aufgezeichnet.\ndas dateisystem unterst\u00fctzt erweiterte zugriffsrechte (acl).\nes werden auch transaktionen unterst\u00fctzt (nur mit texfat).nachteile:\n\nbei dateisystemen ab 32gb ist die standard-clustergr\u00f6\u00dfe 128kb. das bedeutet, dass selbst kleine dateien immer mindestens 128kb platz auf dem dateisystem belegen.\n\n\n=== tfat ===\ntfat (transaction-safe file allocation table) bietet insbesondere f\u00fcr mobile ger\u00e4te mit fest eingebautem flash-speicher schutz vor besch\u00e4digungen des dateisystems, zum beispiel wenn w\u00e4hrend einer schreiboperation die stromversorgung des ger\u00e4tes ausf\u00e4llt.\ndaf\u00fcr wird die fat doppelt gef\u00fchrt: einmal als fat1 mit den aktuellen dateizuordnungen und einmal als fat0 mit dem letzten als konsistent bekannten stand des dateisystems. fat0 wird erst nach erfolgreichem abschluss einer transaktion aktualisiert, indem fat1 nach fat0 kopiert wird. eine transaktion ist beispielsweise das anlegen einer neuen datei.\nw\u00e4hrend des ablaufs einer transaktion werden \u00e4nderungen am dateisystem in neu angelegten clustern gespeichert und fat1 wird entsprechend angepasst. so kann im fehlerfall eine unvollst\u00e4ndig ausgef\u00fchrte transaktion durch kopieren von fat0 nach fat1 r\u00fcckg\u00e4ngig gemacht und das dateisystem auf den stand von vor beginn der transaktion zur\u00fcckversetzt werden.\ndas rechnerische limit f\u00fcr tfat-partitionen liegt bei einer sektorgr\u00f6\u00dfe von 512 byte bei 2 tib.\ntfat ist zwar explizit f\u00fcr nicht entfernbaren speicher gedacht, kann jedoch auch mit wechselspeichermedien verwendet werden. allerdings kann es zu problemen kommen, wenn ein tfat-medium in einem anderen ger\u00e4t ohne unterst\u00fctzung f\u00fcr tfat verwendet wird. es ist dann zwar prinzipiell m\u00f6glich auf das medium zuzugreifen, aber weil es dabei wie ein normales fat-medium behandelt wird, erfolgen schreibvorg\u00e4nge nicht transaktionssicher. auch k\u00f6nnen aufgrund von unterschieden in den datenstrukturen mit tfat erstellte verzeichnisse nicht von fat-systemen gel\u00f6scht werden.\ntfat wird \u00fcblicherweise nicht von desktopsystemen unterst\u00fctzt. unterst\u00fctzt wird es von microsoft f\u00fcr mobilger\u00e4te seit windows mobile 6.5 und windows ce ab version 6.0.\n\n\n== aufbau ==\nein fat-dateisystem gliedert sich in f\u00fcnf bereiche:\n\nalle mehrbyte-werte (16/32 bit) sind im little endian gespeichert, d. h. niederwertigste bytes zuerst.\n\n\n=== bootsektor ===\nder bootsektor kann x86-maschinencode (bootloader) enthalten, der das betriebssystem laden soll. an anderen stellen enth\u00e4lt er informationen \u00fcber das fat-dateisystem.\n\nanschlie\u00dfend unterscheiden sich die daten je nach fat-variante. bei fat12 und fat16 folgt diese datenstruktur:\n\nfat32 benutzt eine davon abweichende struktur ab offset 24hex:\n\n\n=== reservierte sektoren ===\nzwischen bootsektor und der ersten fat k\u00f6nnen sektoren reserviert werden, die vom dateisystem nicht benutzt werden. dieser bereich kann von einem bootmanager oder f\u00fcr betriebssystemspezifische erweiterungen genutzt werden. auf den meisten fat12- oder fat16-dateisystemen existieren \u2013 au\u00dfer dem bootsektor \u2013 keine weiteren reservierten sektoren. die fat folgt somit direkt im anschluss an den bootsektor. fat32-dateisysteme enthalten in der regel noch einige erweiterungen zum bootsektor sowie eine komplette sicherungskopie des bootsektors und der erweiterungen.\n\n\n=== fat ===\ndie fat ist eine art tabelle fester gr\u00f6\u00dfe, in der \u00fcber die belegten und freien cluster eines fat-dateisystems buch gef\u00fchrt wird. ein cluster ist die aus einem oder mehreren sektoren bestehende zuordnungseinheit, die von einer datei belegt werden kann. der datenbereich ist in eine feste anzahl von clustern eingeteilt. zu jedem dieser cluster existiert ein eintrag in der fat, der folgendes angeben kann:\n\nder cluster ist nicht belegt, also frei.\ndas medium ist an der position dieses clusters besch\u00e4digt.\nder cluster ist von einer datei belegt:\nder fat-eintrag zum n\u00e4chsten cluster der datei hat die nummer x, das hei\u00dft: der n\u00e4chste cluster der datei ist der cluster mit der nummer x \u2212 2.\ndas ist der letzte cluster der datei.die gr\u00f6\u00dfe (in bit) und der wertebereich der tabelleneintr\u00e4ge unterscheiden sich zw. fat12, fat16 und fat32 wie folgt:\n\ndie lage der belegten cluster einer datei k\u00f6nnen aus den adressen der zugeh\u00f6rigen fat-eintr\u00e4ge berechnet werden. die fat-eintr\u00e4ge bilden eine einfach verkettete liste.\nwegen ihrer grundlegenden bedeutung f\u00fcr das dateisystem existieren in der regel zwei kopien der fat, um bei datenverlust noch immer eine funktionsf\u00e4hige zweite fat zu haben. mit diversen programmen ist so eine datenwiederherstellung in vielen f\u00e4llen m\u00f6glich.\nauf installationsdisketten oder mit spezialprogrammen formatierten medien findet man manchmal keine zweite fat, wodurch der verf\u00fcgbare speicherplatz etwas gr\u00f6\u00dfer wird. theoretisch ist es auch m\u00f6glich, ein dateisystem mit mehr als zwei fat-kopien zu formatieren. diese dateisysteme k\u00f6nnen zwar in der regel von jedem betriebssystem gelesen werden, jedoch wird die dritte (und jede weitere fat-kopie) bei schreibzugriffen meist nicht aktualisiert, so dass bei besch\u00e4digung der ersten beiden fats oft keine reparatur unter zuhilfenahme der weiteren kopien m\u00f6glich ist.\n\n\n=== stammverzeichnis und unterverzeichnisse ===\ndas stammverzeichnis (englisch root directory), auch wurzelverzeichnis oder hauptverzeichnis genannt, ist eine tabelle von verzeichniseintr\u00e4gen. jede datei oder unterverzeichnis wird in der regel durch je einen verzeichniseintrag repr\u00e4sentiert. die bei windows 95 eingef\u00fchrte erweiterung um \u201elange dateinamen\u201c benutzt jedoch ggf. mehrere verzeichniseintr\u00e4ge pro datei bzw. verzeichnis, um die langen dateinamen unterzubringen.\ndas stammverzeichnis folgt bei fat12 und fat16 direkt der fat und hat eine feste gr\u00f6\u00dfe und damit eine maximalanzahl an verzeichniseintr\u00e4gen. diese wird beim formatieren des dateisystems festgelegt und kann sp\u00e4ter \u2013 au\u00dfer mit spezialsoftware \u2013 nicht mehr ge\u00e4ndert werden.\nbei fat32 hat das stammverzeichnis eine variable gr\u00f6\u00dfe und kann an einer beliebigen position des datenbereichs beginnen.\nje nach medientyp gibt es unterschiedliche vorgabegr\u00f6\u00dfen f\u00fcr das stammverzeichnis. mit speziellen formatierungsprogrammen l\u00e4sst sich jedoch die gr\u00f6\u00dfe des stammverzeichnisses frei w\u00e4hlen. so besitzen beispielsweise installationsdisketten, die nur sehr wenige archivdateien enthalten, oft ein minimales stammverzeichnis, das nur einen sektor gro\u00df ist und somit nur platz f\u00fcr 16 verzeichniseintr\u00e4ge bietet.\n\nein verzeichniseintrag besteht aus 32 bytes.\n\nzusammenspiel:\nsoll nun eine datei gelesen werden, wird der zugeh\u00f6rige verzeichniseintrag herausgesucht. neben den attributen kann hier nun der startcluster selektiert werden. die weiteren cluster werden dann \u00fcber die fat herausgesucht. am ende terminiert die weitersuche jener fat-tabelleneintrag, welcher den wert ffffffh enth\u00e4lt.\nein unterverzeichnis wird als normale datei angelegt, au\u00dfer dass der eintrag im \u00fcbergeordneten verzeichnis mit dem entsprechenden bit markiert ist. der aufbau der eintr\u00e4ge ist mit jenen des hauptverzeichnisses identisch. da die cluster der unterverzeichnisse \u00fcber die fat verkn\u00fcpft werden, k\u00f6nnen sie beliebig wachsen und haben keine begrenzung in der zahl der verwaltbaren dateien.\n\n\n== abweichungen ==\n\n\n=== dateisystem des atari st ===\nder atari st benutzt f\u00fcr disketten eine variante des fat12-dateisystems und kann daher unter ms-dos formatierte und beschriebene disketten lesen und schreiben. urspr\u00fcnglich konnten auf dem atari formatierte disketten nicht unter ms-dos benutzt werden, wohl aber unter ms-dos formatierte und danach auf dem atari beschriebene disketten. diese inkompatibilit\u00e4ten wurden in sp\u00e4teren gemdos-versionen behoben. die unterschiede der atari-implementierung im einzelnen:\nurspr\u00fcnglich standen in den ersten bytes des ersten sektors einer bootf\u00e4hige atari-diskette die opcodes eines assemblerbefehls f\u00fcr den motorola-68000-prozessor, n\u00e4mlich eine sprunganweisung (\u201ebra\u201c f\u00fcr \u201ebranch always\u201c), um den bpb zu \u00fcberspringen. da diese opcodes jedoch in vielen betriebssystemen als kennung verwendet werden, um ein g\u00fcltiges bpb-format zu erkennen, wurde dort ab tos 1.04 der relevante teil eines x86-cpu-opcodes geschrieben.\ndas oem-label beginnt bei atari-disketten an offset 2 statt 3 im bootsektor, und es ist nur sechs statt wie sonst acht bytes lang. in den drei hinzugewonnenen bytes speichern ataris eine seriennummer, die den wechsel von disketten auch ohne disketten-wechsel-signal sicherstellen sollen. da das oem-label in vielen microsoft-betriebssystemen aber tats\u00e4chlich zur erkennung des vorliegenden bpb-formats herangezogen wird, kann ein \u201eun\u00fcbliches\u201c oem-label diverse wechselwirkungen hervorrufen, die ein medium unter diesen systemen nicht mehr lesbar erscheinen lassen oder bei schreibversuchen die datenstrukturen im dateisystem zerst\u00f6ren. solange die bpb-eintr\u00e4ge nicht vom microsoft-standard abweichen, stellt das jedoch kein problem dar.\ndas media-id-byte wurde urspr\u00fcnglich bei der formatierung nicht korrekt gesetzt, was dazu f\u00fchren konnte, dass medien unter anderen betriebssystemen nicht erkannt wurden, insbesondere da auch das bpb-format nicht exakt identisch ist.\nder atari-bootsektor ist, wenn die diskette bootf\u00e4hig ist, mit einer pr\u00fcfsumme gegen bitfehler gesichert. die summe aller 16-bit-big-endian-worte des bootsektors muss 123416 ergeben, sonst wird der bootsektor von ataris als ung\u00fcltig betrachtet. um auf die richtige pr\u00fcfsumme zu kommen, wurde der wert an offset +1fe16 passend ver\u00e4ndert. da dieser jedoch normalerweise die signatur 5516, aa16 enth\u00e4lt (die einen ibm-kompatiblen bootsektor anzeigen soll) und diese von einigen systemen ausgewertet wird, sollte stattdessen ein unbenutztes byte im codebereich zum ausgleich ver\u00e4ndert werden.\natari gemdos unterst\u00fctzt, wie auch viele versionen von ms-dos bis 3.x, nur clustergr\u00f6\u00dfen bis 4 kb.\n\n\n== beispiele ==\n\n\n=== dos- bzw. windows-diskette mit fat12 ===\n\n\n== siehe auch ==\nliste von dateisystemen\n\n\n== weblinks ==\nmicrosoft: einschr\u00e4nkungen des fat32-dateisystems\nmicrosoft: fat32-specification\ninformationen \u00fcber fat32plus auf www.drdos.org und www.drdosprojects.de\nmicrosoft: working with filesystems (englisch)\nprogramm zum erstellen von fat32-partitionen > 32 gib (getestet bis 2 tib)\nextended fat file system (englisch)\n\n\n== einzelnachweise =="