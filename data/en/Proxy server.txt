in computer networking, a proxy server is a server application that acts as an intermediary between a client requesting a resource and the server providing that resource. it improves privacy, security, and performance in the process. 
instead of connecting directly to a server that can fulfill a request for a resource, such as a file or web page, the client directs the request to the proxy server, which evaluates the request and performs the required network transactions. this serves as a method to simplify or control the complexity of the request, or provide additional benefits such as load balancing, privacy, or security. proxies were devised to add structure and encapsulation to distributed systems. a proxy server thus functions on behalf of the client when requesting service, potentially masking the true origin of the request to the resource server.


== types ==
a proxy server may reside on the user's local computer, or at any point between the user's computer and destination servers on the internet. a proxy server that passes unmodified requests and responses is usually called a gateway or sometimes a tunneling proxy. a forward proxy is an internet-facing proxy used to retrieve data from a wide range of sources (in most cases, anywhere on the internet). a reverse proxy is usually an internal-facing proxy used as a front-end to control and protect access to a server on a private network. a reverse proxy commonly also performs tasks such as load-balancing, authentication, decryption and caching.


=== open proxies ===
an open proxy is a forwarding proxy server that is accessible by any internet user. in 2008, network security expert gordon lyon estimated that "hundreds of thousands" of open proxies are operated on the internet.
anonymous proxy: this server reveals its identity as a proxy server but does not disclose the originating ip address of the client. although this type of server can be discovered easily, it can be beneficial for some users as it hides the originating ip address.
transparent proxy: this server not only identifies itself as a proxy server, but with the support of http header fields such as x-forwarded-for, the originating ip address can be retrieved as well. the main benefit of using this type of server is its ability to cache a website for faster retrieval.


=== reverse proxies ===

a reverse proxy (or surrogate) is a proxy server that appears to clients to be an ordinary server. reverse proxies forward requests to one or more ordinary servers that handle the request. the response from the original server is returned as if it came directly from the proxy server, leaving the client with no knowledge of the original server. reverse proxies are installed in the vicinity of one or more web servers. all traffic coming from the internet and with a destination of one of the neighborhood's web servers goes through the proxy server. the use of "reverse" originates in its counterpart "forward proxy" since the reverse proxy sits closer to the web server and serves only a restricted set of websites. there are several reasons for installing reverse proxy servers:

encryption/ssl acceleration: when secure websites are created, the secure sockets layer (ssl) encryption is often not done by the web server itself, but by a reverse proxy that is equipped with ssl acceleration hardware. furthermore, a host can provide a single "ssl proxy" to provide ssl encryption for an arbitrary number of hosts, removing the need for a separate ssl server certificate for each host, with the downside that all hosts behind the ssl proxy have to share a common dns name or ip address for ssl connections. this problem can partly be overcome by using the subjectaltname feature of x.509 certificates or the sni extension of tls.
load balancing: the reverse proxy can distribute the load to several web servers, each serving its own application area. in such a case, the reverse proxy may need to rewrite the urls in each web page (translation from externally known urls to the internal locations).
serve/cache static content: a reverse proxy can offload the web servers by caching static content like pictures and other static graphical content.
compression: the proxy server can optimize and compress the content to speed up the load time.
spoon feeding: reduces resource usage caused by slow clients on the web servers by caching the content the web server sent and slowly "spoon feeding" it to the client. this especially benefits dynamically generated pages.
security: the proxy server is an additional layer of defense and can protect against some os and web-server-specific attacks. however, it does not provide any protection from attacks against the web application or service itself, which is generally considered the larger threat.
extranet publishing: a reverse proxy server facing the internet can be used to communicate to a firewall server internal to an organization, providing extranet access to some functions while keeping the servers behind the firewalls. if used in this way, security measures should be considered to protect the rest of your infrastructure in case this server is compromised, as its web application is exposed to attack from the internet.


== uses ==


=== monitoring and filtering ===


==== content-control software ====

a content-filtering web proxy server provides administrative control over the content that may be relayed in one or both directions through the proxy. it is commonly used in both commercial and non-commercial organizations (especially schools) to ensure that internet usage conforms to acceptable use policy.
content filtering proxy servers will often support user authentication to control web access. it also usually produces logs, either to give detailed information about the urls accessed by specific users or to monitor bandwidth usage statistics. it may also communicate to daemon-based and/or icap-based antivirus software to provide security against viruses and other malware by scanning incoming content in real-time before it enters the network.
many workplaces, schools, and colleges restrict web sites and online services that are accessible and available in their buildings. governments also censor undesirable content. this is done either with a specialized proxy, called a content filter (both commercial and free products are available), or by using a cache-extension protocol such as icap, that allows plug-in extensions to an open caching architecture.
websites commonly used by students to circumvent filters and access blocked content often include a proxy, from which the user can then access the websites that the filter is trying to block.
requests may be filtered by several methods, such as a url or dns blacklists, url regex filtering, mime filtering, or content keyword filtering. blacklists are often provided and maintained by web-filtering companies, often grouped into categories (pornography, gambling, shopping, social networks, etc..).
the proxy then fetches the content, assuming the requested url is acceptable. at this point, a dynamic filter may be applied on the return path. for example, jpeg files could be blocked based on fleshtone matches, or language filters could dynamically detect unwanted language. if the content is rejected then an http fetch error may be returned to the requester.
most web filtering companies use an internet-wide crawling robot that assesses the likelihood that content is a certain type. manual labor is used to correct the resultant database based on complaints or known flaws in the content-matching algorithms.some proxies scan outbound content, e.g., for data loss prevention; or scan content for malicious software.


==== filtering of encrypted data ====
web filtering proxies are not able to peer inside secure sockets http transactions, assuming the chain-of-trust of ssl/tls (transport layer security) has not been tampered with. the ssl/tls chain-of-trust relies on trusted root certificate authorities.
in a workplace setting where the client is managed by the organization, devices may be configured to trust a root certificate whose private key is known to the proxy. in such situations, proxy analysis of the contents of an ssl/tls transaction becomes possible. the proxy is effectively operating a man-in-the-middle attack, allowed by the client's trust of a root certificate the proxy owns.


==== bypassing filters and censorship ====
if the destination server filters content based on the origin of the request, the use of a proxy can circumvent this filter. for example, a server using ip-based geolocation to restrict its service to a certain country can be accessed using a proxy located in that country to access the service.: 3 web proxies are the most common means of bypassing government censorship, although no more than 3% of internet users use any circumvention tools.: 7 some proxy service providers allow businesses access to their proxy network for rerouting traffic for business intelligence purposes.in some cases, users can circumvent proxies that filter using blacklists by using services designed to proxy information from a non-blacklisted location.


==== logging and eavesdropping ====
proxies can be installed in order to eavesdrop upon the data-flow between client machines and the web. all content sent or accessed – including passwords submitted and cookies used – can be captured and analyzed by the proxy operator. for this reason, passwords to online services (such as webmail and banking) should always be exchanged over a cryptographically secured connection, such as ssl.
by chaining the proxies which do not reveal data about the original requester, it is possible to obfuscate activities from the eyes of the user's destination. however, more traces will be left on the intermediate hops, which could be used or offered up to trace the user's activities. if the policies and administrators of these other proxies are unknown, the user may fall victim to a false sense of security just because those details are out of sight and mind.
in what is more of an inconvenience than a risk, proxy users may find themselves being blocked from certain web sites, as numerous forums and web sites block ip addresses from proxies known to have spammed or trolled the site. proxy bouncing can be used to maintain privacy.


=== improving performance ===
a caching proxy server accelerates service requests by retrieving the content saved from a previous request made by the same client or even other clients. caching proxies keep local copies of frequently requested resources, allowing large organizations to significantly reduce their upstream bandwidth usage and costs, while significantly increasing performance. most isps and large businesses have a caching proxy. caching proxies were the first kind of proxy server. web proxies are commonly used to cache web pages from a web server. poorly implemented caching proxies can cause problems, such as an inability to use user authentication.a proxy that is designed to mitigate specific link related issues or degradation is a performance enhancing proxy (peps). these are typically used to improve tcp performance in the presence of high round-trip times or high packet loss (such as wireless or mobile phone networks); or highly asymmetric links featuring very different upload and download rates. peps can make more efficient use of the network, for example, by merging tcp acks (acknowledgements) or compressing data sent at the application layer.


=== translation ===
a translation proxy is a proxy server that is used to localize a website experience for different markets. traffic from the global audience is routed through the translation proxy to the source website. as visitors browse the proxied site, requests go back to the source site where pages are rendered. the original language content in the response is replaced by the translated content as it passes back through the proxy. the translations used in a translation proxy can be either machine translation, human translation, or a combination of machine and human translation. different translation proxy implementations have different capabilities. some allow further customization of the source site for the local audiences such as excluding the source content or substituting the source content with the original local content.


=== accessing services anonymously ===

an anonymous proxy server (sometimes called a web proxy) generally attempts to anonymize web surfing.  anonymizers may be differentiated into several varieties. the destination server (the server that ultimately satisfies the web request) receives requests from the anonymizing proxy server and thus does not receive information about the end user's address. the requests are not anonymous to the anonymizing proxy server, however, and so a degree of trust is present between the proxy server and the user. many proxy servers are funded through a continued advertising link to the user.
access control: some proxy servers implement a logon requirement. in large organizations, authorized users must log on to gain access to the web. the organization can thereby track usage to individuals. some anonymizing proxy servers may forward data packets with header lines such as http_via, http_x_forwarded_for, or http_forwarded, which may reveal the ip address of the client. other anonymizing proxy servers, known as elite or high-anonymity proxies, make it appear that the proxy server is the client. a website could still suspect a proxy is being used if the client sends packets that include a cookie from a previous visit that did not use the high-anonymity proxy server. clearing cookies, and possibly the cache, would solve this problem.


==== qa geotargeted advertising ====
advertisers use proxy servers for validating, checking and quality assurance of geotargeted ads. a geotargeting ad server checks the request source ip address and uses a geo-ip database to determine the geographic source of requests. using a proxy server that is physically located inside a specific country or a city gives advertisers the ability to test geotargeted ads.


=== security ===
a proxy can keep the internal network structure of a company secret by using network address translation, which can help the security of the internal network. this makes requests from machines and users on the local network anonymous. proxies can also be combined with firewalls.
an incorrectly configured proxy can provide access to a network otherwise isolated from the internet.


==== cross-domain resources ====
proxies allow web sites to make web requests to externally hosted resources (e.g. images, music files, etc.) when cross-domain restrictions prohibit the web site from linking directly to the outside domains. proxies also allow the browser to make web requests to externally hosted content on behalf of a website when cross-domain restrictions (in place to protect websites from the likes of data theft) prohibit the browser from directly accessing the outside domains.


=== malicious usages ===


==== secondary market brokers ====
secondary market brokers use web proxy servers to circumvent restrictions on online purchase of limited products such as limited sneakers or tickets.


== implementations of proxies ==


=== web proxy servers ===
web proxies forward http requests. the request from the client is the same as a regular http request except the full url is passed, instead of just the path.

this request is sent to the proxy server, the proxy makes the request specified and returns the response.

some web proxies allow the http connect method to set up forwarding of arbitrary data through the connection; a common policy is to only forward port 443 to allow https traffic.
examples of web proxy servers include apache (with mod_proxy or traffic server), haproxy, iis configured as proxy (e.g., with application request routing), nginx, privoxy, squid, varnish (reverse proxy only), wingate, ziproxy, tinyproxy, rabbit and polipo.
for clients, the problem of complex or multiple proxy-servers is solved by a client-server proxy auto-config protocol (pac file).


=== socks proxy ===
socks also forwards arbitrary data after a connection phase, and is similar to http connect in web proxies.


=== transparent proxy ===
also known as an intercepting proxy, inline proxy, or forced proxy, a transparent proxy intercepts normal application layer communication without requiring any special client configuration. clients need not be aware of the existence of the proxy. a transparent proxy is normally located between the client and the internet, with the proxy performing some of the functions of a gateway or router.rfc 2616 (hypertext transfer protocol—http/1.1) offers standard definitions:
"a 'transparent proxy' is a proxy that does not modify the request or response beyond what is required for proxy authentication and identification". "a 'non-transparent proxy' is a proxy that modifies the request or response in order to provide some added service to the user agent, such as group annotation services, media type transformation, protocol reduction, or anonymity filtering".
tcp intercept is a traffic filtering security feature that protects tcp servers from tcp syn flood attacks, which are a type of denial-of-service attack. tcp intercept is available for ip traffic only.
in 2009 a security flaw in the way that transparent proxies operate was published by robert auger, and the computer emergency response team issued an advisory listing dozens of affected transparent and intercepting proxy servers.


==== purpose ====
intercepting proxies are commonly used in businesses to enforce acceptable use policies and to ease administrative overheads since no client browser configuration is required. this second reason, however is mitigated by features such as active directory group policy, or dhcp and automatic proxy detection.
intercepting proxies are also commonly used by isps in some countries to save upstream bandwidth and improve customer response times by caching. this is more common in countries where bandwidth is more limited (e.g. island nations) or must be paid for.


==== issues ====
the diversion or interception of a tcp connection creates several issues. first, the original destination ip and port must somehow be communicated to the proxy. this is not always possible (e.g., where the gateway and proxy reside on different hosts). there is a class of cross-site attacks that depend on certain behaviors of intercepting proxies that do not check or have access to information about the original (intercepted) destination. this problem may be resolved by using an integrated packet-level and application level appliance or software which is then able to communicate this information between the packet handler and the proxy.
intercepting also creates problems for http authentication, especially connection-oriented authentication such as ntlm, as the client browser believes it is talking to a server rather than a proxy. this can cause problems where an intercepting proxy requires authentication, and then the user connects to a site that also requires authentication.
finally, intercepting connections can cause problems for http caches, as some requests and responses become uncacheable by a shared cache.


==== implementation methods ====
in integrated firewall/proxy servers where the router/firewall is on the same host as the proxy, communicating original destination information can be done by any method, for example microsoft tmg or wingate.
interception can also be performed using cisco's wccp (web cache control protocol). this proprietary protocol resides on the router and is configured from the cache, allowing the cache to determine what ports and traffic is sent to it via transparent redirection from the router. this redirection can occur in one of two ways: gre tunneling (osi layer 3) or mac rewrites (osi layer 2).
once traffic reaches the proxy machine itself, interception is commonly performed with nat (network address translation). such setups are invisible to the client browser, but leave the proxy visible to the web server and other devices on the internet side of the proxy. recent linux and some bsd releases provide tproxy (transparent proxy) which performs ip-level (osi layer 3) transparent interception and spoofing of outbound traffic, hiding the proxy ip address from other network devices.


==== detection ====
several methods may be used to detect the presence of an intercepting proxy server:

by comparing the client's external ip address to the address seen by an external web server, or sometimes by examining the http headers received by a server. a number of sites have been created to address this issue, by reporting the user's ip address as seen by the site back to the user on a web page. google also returns the ip address as seen by the page if the user searches for "ip".
by comparing the results of online ip checkers when accessed using https vs. http, as most intercepting proxies do not intercept ssl. if there is suspicion of ssl being intercepted, one can examine the certificate associated with any secure web site, the root certificate should indicate whether it was issued for the purpose of intercepting.
by comparing the sequence of network hops reported by a tool such as traceroute for a proxied protocol such as http (port 80) with that for a non-proxied protocol such as smtp (port 25).
by attempting to make a connection to an ip address at which there is known to be no server. the proxy will accept the connection and then attempt to proxy it on. when the proxy finds no server to accept the connection, it may return an error message or simply close the connection to the client. this difference in behavior is simple to detect. for example, most web browsers will generate a browser created error page in the case where they cannot connect to an http server but will return a different error in the case where the connection is accepted and then closed.
by serving the end-user specially programmed adobe flash swf applications or sun java applets that send http calls back to their server.


=== cgi proxy ===
a cgi web proxy accepts target urls using a web form in the user's browser window, processes the request, and returns the results to the user's browser. consequently, it can be used on a device or network that does not allow "true" proxy settings to be changed. the first recorded cgi proxy, named "rover" at the time but renamed in 1998 to "cgiproxy", was developed by american computer scientist james marshall in early 1996 for an article in "unix review" by rich morin.the majority of cgi proxies are powered by one of cgiproxy (written in the perl language), glype (written in the php language), or phproxy (written in the php language). as of april 2016, cgiproxy has received about 2 million downloads, glype has received almost a million downloads, whilst phproxy still receives hundreds of downloads per week. despite waning in popularity due to vpns and other privacy methods, as of september 2021 there are still a few hundred cgi proxies online.some cgi proxies were set up for purposes such as making websites more accessible to disabled people, but have since been shut down due to excessive traffic, usually caused by a third party advertising the service as a means to bypass local filtering. since many of these users do not care about the collateral damage they are causing, it became necessary for organizations to hide their proxies, disclosing the urls only to those who take the trouble to contact the organization and demonstrate a genuine need.


=== suffix proxy ===
a suffix proxy allows a user to access web content by appending the name of the proxy server to the url of the requested content (e.g. "en.wikipedia.org.suffixproxy.com"). suffix proxy servers are easier to use than regular proxy servers, but they do not offer high levels of anonymity, and their primary use is for bypassing web filters. however, this is rarely used due to more advanced web filters.


=== tor onion proxy software ===
tor is a system intended to provide online anonymity. tor client software routes internet traffic through a worldwide volunteer network of servers for concealing a user's computer location or usage from someone conducting network surveillance or traffic analysis. using tor makes tracing internet activity more difficult, and is intended to protect users' personal freedom and their online privacy.
"onion routing" refers to the layered nature of the encryption service: the original data are encrypted and re-encrypted multiple times, then sent through successive tor relays, each one of which decrypts a "layer" of encryption before passing the data on to the next relay and ultimately the destination. this reduces the possibility of the original data being unscrambled or understood in transit.


=== i2p anonymous proxy ===
the i2p anonymous network ('i2p') is a proxy network aiming at online anonymity. it implements garlic routing, which is an enhancement of tor's onion routing. i2p is fully distributed and works by encrypting all communications in various layers and relaying them through a network of routers run by volunteers in various locations. by keeping the source of the information hidden, i2p offers censorship resistance. the goals of i2p are to protect users' personal freedom, privacy, and ability to conduct confidential business.
each user of i2p runs an i2p router on their computer (node). the i2p router takes care of finding other peers and building anonymizing tunnels through them. i2p provides proxies for all protocols (http, irc, socks, ...).


=== comparison to network address translators ===
the proxy concept refers to a layer 7 application in the osi reference model. network address translation (nat) is similar to a proxy but operates in layer 3.
in the client configuration of layer-3 nat, configuring the gateway is sufficient. however, for the client configuration of a layer 7 proxy, the destination of the packets that the client generates must always be the proxy server (layer 7), then the proxy server reads each packet and finds out the true destination.
because nat operates at layer-3, it is less resource-intensive than the layer-7 proxy, but also less flexible. as we compare these two technologies, we might encounter a terminology known as 'transparent firewall'. transparent firewall means that the proxy uses the layer-7 proxy advantages without the knowledge of the client. the client presumes that the gateway is a nat in layer 3, and it does not have any idea about the inside of the packet, but through this method, the layer-3 packets are sent to the layer-7 proxy for investigation.


=== dns proxy ===
a dns proxy server takes dns queries from a (usually local) network and forwards them to an internet domain name server. it may also cache dns records.


=== proxifiers ===
some client programs "socks-ify" requests, which allows adaptation of any networked software to connect to external networks via certain types of proxy servers (mostly socks).


=== residential proxy (resip) ===
a residential proxy is an intermediary that uses a real ip address provided by an internet service provider (isp) with physical devices such as mobiles and computers of end-users. instead of connecting directly to a server, residential proxy users connect to the target through residential ip addresses. the target then identifies them as organic internet users. it does not let any tracking tool identify the reallocation of the user. any residential proxy can send any number of concurrent requests, and ip addresses are directly related to a specific region. unlike regular residential proxies, which hide the user's real ip address behind another ip address, rotating residential proxies, also known as backconnect proxies, conceal the user's real ip address behind a pool of proxies. these proxies switch between themselves at every session or at regular intervals.despite the providers assertion that the proxy hosts are voluntarily participating, numerous proxies are operated on potentially compromised hosts, including internet of things devices. through the process of cross-referencing the hosts, researchers have identified and analyzed logs that have been classified as potentially unwanted program and exposed a range of unauthorized activities conducted by resip hosts. these activities encompassed illegal promotion, fast fluxing, phishing, hosting malware, and more.


== see also ==


== references ==


== external links ==
proxy software and scripts at curlie
free web-based proxy services at curlie
free http proxy servers at curlie